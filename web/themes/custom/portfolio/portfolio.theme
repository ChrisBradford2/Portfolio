<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 *
 * Example on how to alter theme settings form
 */
function portfolio_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function portfolio_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  // Suggestions for custom views_view bundles.
  if (!empty($variables['view'])) {
    $view = $variables['view'];
    if (!empty($view->id()) && !empty($view->getDisplay()->getPluginId())) {
      $id = $view->id();
      $display = $view->getDisplay()->getPluginId();
      $hook = 'views_view';
      $suggestion = $hook . '__' . $id . '__' . $display;
      if (!in_array($suggestion, $suggestions)) {
        array_splice($suggestions, 1, 0, $suggestion);
      }
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function portfolio_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {
  // Suggestions for custom views_view_unformatted bundles.
  if (!empty($variables['view'])) {
    $view = $variables['view'];
    if (!empty($view->id()) && !empty($view->getDisplay()->getPluginId())) {
      $id = $view->id();
      $display = $view->getDisplay()->getPluginId();
      $hook = 'views_view_unformatted';
      $suggestion = $hook . '__' . $id . '__' . $display;
      if (!in_array($suggestion, $suggestions)) {
        array_splice($suggestions, 1, 0, $suggestion);
      }
    }
  }
}

function portfolio_theme_suggestions_file_link_alter(&$suggestions, $vars, $hook) {

  // Get the node type.
  $node = \Drupal::routeMatch()->getParameter('node');
  $type = $node->getType();

  // Create the theme hook suggestion.
  $suggestions[] = 'file__link__' . 'type_' . $type;
}
